
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using FlubuCore.Tasks.Docker.Image;

namespace FlubuCore.Context.FluentInterface.Docker
{
    public class Image
    {  
        
            public DockerImageBuildTask ImageBuild(string pathOrURL)
            {
                return new DockerImageBuildTask(pathOrURL);
            }

            public DockerImageHistoryTask ImageHistory(string image)
            {
                return new DockerImageHistoryTask(image);
            }

            public DockerImageImportTask ImageImport(string file ,  string repository)
            {
                return new DockerImageImportTask(file,  repository);
            }

            public DockerImageInspectTask ImageInspect(params string[] image)
            {
                return new DockerImageInspectTask(image);
            }

            public DockerImageLoadTask ImageLoad()
            {
                return new DockerImageLoadTask();
            }

            public DockerImageLsTask ImageLs(string repository)
            {
                return new DockerImageLsTask(repository);
            }

            public DockerImagePruneTask ImagePrune()
            {
                return new DockerImagePruneTask();
            }

            public DockerImagePullTask ImagePull(string name)
            {
                return new DockerImagePullTask(name);
            }

            public DockerImagePushTask ImagePush(string name)
            {
                return new DockerImagePushTask(name);
            }

            public DockerImageRmTask ImageRm(params string[] image)
            {
                return new DockerImageRmTask(image);
            }

            public DockerImageSaveTask ImageSave(params string[] image)
            {
                return new DockerImageSaveTask(image);
            }
        
    }
}

