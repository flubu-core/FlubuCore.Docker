
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using FlubuCore.Context;
using FlubuCore.Tasks;
using FlubuCore.Tasks.Attributes;
using FlubuCore.Tasks.Process;

namespace FlubuCore.Tasks.Docker.Image
{
     public partial class DockerImageLoadTask : ExternalProcessTaskBase<int, DockerImageLoadTask>
     {
        
        
        public DockerImageLoadTask()
        {
            ExecutablePath = "docker";
            WithArguments("image load");

        }

        protected override string Description { get; set; }
        
        /// <summary>
        /// Read from tar archive file, instead of STDIN
        /// </summary>
        [ArgKey("--input")]
        public DockerImageLoadTask Input(string input)
        {
            WithArgumentsKeyFromAttribute(input.ToString());
            return this;
        }

        /// <summary>
        /// Suppress the load output
        /// </summary>
        [ArgKey("--quiet")]
        public DockerImageLoadTask Quiet()
        {
            WithArgumentsKeyFromAttribute();
            return this;
        }
        protected override int DoExecute(ITaskContextInternal context)
        {
            
            return base.DoExecute(context);
        }

     }
}
