
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using FlubuCore.Context;
using FlubuCore.Tasks;
using FlubuCore.Tasks.Attributes;
using FlubuCore.Tasks.Process;

namespace FlubuCore.Tasks.Docker.Container
{
     public partial class DockerContainerKillTask : ExternalProcessTaskBase<int, DockerContainerKillTask>
     {
        private string[] _container;

        
        public DockerContainerKillTask(params string[] container)
        {
            ExecutablePath = "docker";
            WithArgumentsKeyFromAttribute();
_container = container;

        }

        protected override string Description { get; set; }
        
        /// <summary>
        /// Signal to send to the container
        /// </summary>
        [ArgKey("signal")]
        public DockerContainerKillTask Signal(string signal)
        {
            WithArgumentsKeyFromAttribute(signal.ToString());
            return this;
        }
        protected override int DoExecute(ITaskContextInternal context)
        {
             WithArguments(_container);

            return base.DoExecute(context);
        }

     }
}
