
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using FlubuCore.Context;
using FlubuCore.Tasks;
using FlubuCore.Tasks.Attributes;
using FlubuCore.Tasks.Process;

namespace FlubuCore.Tasks.Docker.Swarm
{
     public partial class DockerSwarmJoinTokenTask : ExternalProcessTaskBase<int, DockerSwarmJoinTokenTask>
     {
        private string _worker;

        
        public DockerSwarmJoinTokenTask(string worker)
        {
            ExecutablePath = "docker";
            WithArgumentsKeyFromAttribute();
_worker = worker;

        }

        protected override string Description { get; set; }
        
        /// <summary>
        /// Only display token
        /// </summary>
        [ArgKey("quiet")]
        public DockerSwarmJoinTokenTask Quiet()
        {
            WithArgumentsKeyFromAttribute();
            return this;
        }

        /// <summary>
        /// Rotate join token
        /// </summary>
        [ArgKey("rotate")]
        public DockerSwarmJoinTokenTask Rotate()
        {
            WithArgumentsKeyFromAttribute();
            return this;
        }
        protected override int DoExecute(ITaskContextInternal context)
        {
             WithArguments(_worker);

            return base.DoExecute(context);
        }

     }
}
