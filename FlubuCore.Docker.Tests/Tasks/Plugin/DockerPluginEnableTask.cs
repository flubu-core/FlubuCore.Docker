
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using FlubuCore.Context;
using FlubuCore.Tasks;
using FlubuCore.Tasks.Attributes;
using FlubuCore.Tasks.Process;

namespace FlubuCore.Tasks.Docker.Plugin
{
     public partial class DockerPluginEnableTask : ExternalProcessTaskBase<int, DockerPluginEnableTask>
     {
        private string _plugin;

        
        public DockerPluginEnableTask(string plugin)
        {
            ExecutablePath = "docker";
            WithArgumentsKeyFromAttribute();
_plugin = plugin;

        }

        protected override string Description { get; set; }
        
        /// <summary>
        /// HTTP client timeout (in seconds)
        /// </summary>
        [ArgKey("timeout")]
        public DockerPluginEnableTask Timeout(int timeout)
        {
            WithArgumentsKeyFromAttribute(timeout.ToString());
            return this;
        }
        protected override int DoExecute(ITaskContextInternal context)
        {
             WithArguments(_plugin);

            return base.DoExecute(context);
        }

     }
}
