
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using FlubuCore.Context;
using FlubuCore.Tasks;
using FlubuCore.Tasks.Attributes;
using FlubuCore.Tasks.Process;

namespace FlubuCore.Tasks.Docker.Engine
{
     public partial class DockerEngineActivateTask : ExternalProcessTaskBase<int, DockerEngineActivateTask>
     {
        
        
        public DockerEngineActivateTask()
        {
            ExecutablePath = "docker";
            WithArgumentsKeyFromAttribute();

        }

        protected override string Description { get; set; }
        
        /// <summary>
        /// override default location of containerd endpoint
        /// </summary>
        [ArgKey("containerd")]
        public DockerEngineActivateTask Containerd(string containerd)
        {
            WithArgumentsKeyFromAttribute(containerd.ToString());
            return this;
        }

        /// <summary>
        /// only display license information and exit
        /// </summary>
        [ArgKey("display-only")]
        public DockerEngineActivateTask DisplayOnly()
        {
            WithArgumentsKeyFromAttribute();
            return this;
        }

        /// <summary>
        /// Specify engine image
        /// </summary>
        [ArgKey("engine-image")]
        public DockerEngineActivateTask EngineImage(string engineImage)
        {
            WithArgumentsKeyFromAttribute(engineImage.ToString());
            return this;
        }

        /// <summary>
        /// Pretty-print licenses using a Go template
        /// </summary>
        [ArgKey("format")]
        public DockerEngineActivateTask Format(string format)
        {
            WithArgumentsKeyFromAttribute(format.ToString());
            return this;
        }

        /// <summary>
        /// License File
        /// </summary>
        [ArgKey("license")]
        public DockerEngineActivateTask License(string license)
        {
            WithArgumentsKeyFromAttribute(license.ToString());
            return this;
        }

        /// <summary>
        /// Only display available licenses by ID
        /// </summary>
        [ArgKey("quiet")]
        public DockerEngineActivateTask Quiet()
        {
            WithArgumentsKeyFromAttribute();
            return this;
        }

        /// <summary>
        /// Override the default location where engine images are pulled
        /// </summary>
        [ArgKey("registry-prefix")]
        public DockerEngineActivateTask RegistryPrefix(string registryPrefix)
        {
            WithArgumentsKeyFromAttribute(registryPrefix.ToString());
            return this;
        }

        /// <summary>
        /// Specify engine version (default is to use currently running version)

        /// </summary>
        [ArgKey("version")]
        public DockerEngineActivateTask Version(string version)
        {
            WithArgumentsKeyFromAttribute(version.ToString());
            return this;
        }
        protected override int DoExecute(ITaskContextInternal context)
        {
            
            return base.DoExecute(context);
        }

     }
}
