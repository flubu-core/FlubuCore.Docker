
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using FlubuCore.Context;
using FlubuCore.Tasks;
using FlubuCore.Tasks.Attributes;
using FlubuCore.Tasks.Process;

namespace FlubuCore.Tasks.Docker.Config
{
     public partial class DockerConfigCreateTask : ExternalProcessTaskBase<int, DockerConfigCreateTask>
     {
        private string _config;
private string _file;

        
        public DockerConfigCreateTask(string config,  string file)
        {
            ExecutablePath = "docker";
            WithArguments("config create");
_config = config;
_file = file;

        }

        protected override string Description { get; set; }
        
        /// <summary>
        /// Config labels
        /// </summary>
        [ArgKey("--label")]
        public DockerConfigCreateTask Label(string label)
        {
            WithArgumentsKeyFromAttribute(label.ToString());
            return this;
        }

        /// <summary>
        /// Template driver
        /// </summary>
        [ArgKey("--template-driver")]
        public DockerConfigCreateTask TemplateDriver(string templateDriver)
        {
            WithArgumentsKeyFromAttribute(templateDriver.ToString());
            return this;
        }
        protected override int DoExecute(ITaskContextInternal context)
        {
             WithArguments(_config);
 WithArguments(_file);

            return base.DoExecute(context);
        }

     }
}
