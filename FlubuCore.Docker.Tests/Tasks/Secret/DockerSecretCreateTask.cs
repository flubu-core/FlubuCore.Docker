
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using FlubuCore.Context;
using FlubuCore.Tasks;
using FlubuCore.Tasks.Attributes;
using FlubuCore.Tasks.Process;

namespace FlubuCore.Tasks.Docker.Secret
{
     public partial class DockerSecretCreateTask : ExternalProcessTaskBase<int, DockerSecretCreateTask>
     {
        private string _secret;
private string _file;

        
        public DockerSecretCreateTask(string secret,  string file = null)
        {
            ExecutablePath = "docker";
            WithArguments("secret create");
_secret = secret;
_file = file;

        }

        protected override string Description { get; set; }
        
        /// <summary>
        /// Secret driver
        /// </summary>
        [ArgKey("--driver")]
        public DockerSecretCreateTask Driver(string driver)
        {
            WithArgumentsKeyFromAttribute(driver.ToString());
            return this;
        }

        /// <summary>
        /// Secret labels
        /// </summary>
        [ArgKey("--label")]
        public DockerSecretCreateTask Label(string label)
        {
            WithArgumentsKeyFromAttribute(label.ToString());
            return this;
        }

        /// <summary>
        /// Template driver
        /// </summary>
        [ArgKey("--template-driver")]
        public DockerSecretCreateTask TemplateDriver(string templateDriver)
        {
            WithArgumentsKeyFromAttribute(templateDriver.ToString());
            return this;
        }
        protected override int DoExecute(ITaskContextInternal context)
        {
             WithArguments(_secret);
 WithArguments(_file);

            return base.DoExecute(context);
        }

     }
}
