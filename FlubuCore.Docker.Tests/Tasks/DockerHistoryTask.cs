
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using FlubuCore.Context;
using FlubuCore.Tasks;
using FlubuCore.Tasks.Attributes;
using FlubuCore.Tasks.Process;

namespace FlubuCore.Tasks.Docker
{
     public partial class DockerHistoryTask : ExternalProcessTaskBase<int, DockerHistoryTask>
     {
        private string _image;

        
        public DockerHistoryTask(string image)
        {
            ExecutablePath = "docker";
            WithArguments("history");
_image = image;

        }

        protected override string Description { get; set; }
        
        /// <summary>
        /// Pretty-print images using a Go template
        /// </summary>
        [ArgKey("--format")]
        public DockerHistoryTask Format(string format)
        {
            WithArgumentsKeyFromAttribute(format.ToString());
            return this;
        }

        /// <summary>
        /// Print sizes and dates in human readable format
        /// </summary>
        [ArgKey("--human")]
        public DockerHistoryTask Human()
        {
            WithArgumentsKeyFromAttribute();
            return this;
        }

        /// <summary>
        /// Don't truncate output
        /// </summary>
        [ArgKey("--no-trunc")]
        public DockerHistoryTask NoTrunc()
        {
            WithArgumentsKeyFromAttribute();
            return this;
        }

        /// <summary>
        /// Only show numeric IDs
        /// </summary>
        [ArgKey("--quiet")]
        public DockerHistoryTask Quiet()
        {
            WithArgumentsKeyFromAttribute();
            return this;
        }
        protected override int DoExecute(ITaskContextInternal context)
        {
             WithArguments(_image);

            return base.DoExecute(context);
        }

     }
}
