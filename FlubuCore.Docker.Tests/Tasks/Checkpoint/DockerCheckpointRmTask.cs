
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using FlubuCore.Context;
using FlubuCore.Tasks;
using FlubuCore.Tasks.Attributes;
using FlubuCore.Tasks.Process;

namespace FlubuCore.Tasks.Docker.Checkpoint
{
     public partial class DockerCheckpointRmTask : ExternalProcessTaskBase<int, DockerCheckpointRmTask>
     {
        private string _container;
private string _checkpoint;

        
        public DockerCheckpointRmTask(string container,  string checkpoint)
        {
            ExecutablePath = "docker";
            WithArgumentsKeyFromAttribute();
_container = container;
_checkpoint = checkpoint;

        }

        protected override string Description { get; set; }
        
        /// <summary>
        /// Use a custom checkpoint storage directory
        /// </summary>
        [ArgKey("checkpoint-dir")]
        public DockerCheckpointRmTask CheckpointDir(string checkpointDir)
        {
            WithArgumentsKeyFromAttribute(checkpointDir.ToString());
            return this;
        }
        protected override int DoExecute(ITaskContextInternal context)
        {
             WithArguments(_container);
 WithArguments(_checkpoint);

            return base.DoExecute(context);
        }

     }
}
